// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProposalService.Persistence;

#nullable disable

namespace ProposalService.Persistence.Migrations
{
    [DbContext(typeof(ProposalContext))]
    [Migration("20250727135134_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProposalService.Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id")
                        .HasName("pk_client");

                    b.ToTable("client", (string)null);
                });

            modelBuilder.Entity("ProposalService.Domain.Entities.InsuranceType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_insurance_types");

                    b.ToTable("insurance_types", (string)null);
                });

            modelBuilder.Entity("ProposalService.Domain.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_payment_methods");

                    b.ToTable("payment_methods", (string)null);
                });

            modelBuilder.Entity("ProposalService.Domain.Entities.Proposal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("client_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<DateOnly>("EndAt")
                        .HasColumnType("date")
                        .HasColumnName("end_at");

                    b.Property<Guid>("IdClient")
                        .HasColumnType("uuid")
                        .HasColumnName("id_client");

                    b.Property<int>("IdInsuranceType")
                        .HasColumnType("integer")
                        .HasColumnName("id_insurance_type");

                    b.Property<int>("IdPaymentMethod")
                        .HasColumnType("integer")
                        .HasColumnName("id_payment_method");

                    b.Property<int>("IdStatus")
                        .HasColumnType("integer")
                        .HasColumnName("id_status");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<decimal>("Premium")
                        .HasColumnType("numeric")
                        .HasColumnName("premium");

                    b.Property<DateOnly>("StartAt")
                        .HasColumnType("date")
                        .HasColumnName("start_at");

                    b.HasKey("Id")
                        .HasName("pk_proposals");

                    b.HasIndex("ClientId")
                        .HasDatabaseName("ix_proposals_client_id");

                    b.HasIndex("IdInsuranceType")
                        .HasDatabaseName("ix_proposals_id_insurance_type");

                    b.HasIndex("IdPaymentMethod")
                        .HasDatabaseName("ix_proposals_id_payment_method");

                    b.HasIndex("IdStatus")
                        .HasDatabaseName("ix_proposals_id_status");

                    b.ToTable("proposals", (string)null);
                });

            modelBuilder.Entity("ProposalService.Domain.Entities.ProposalStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_proposal_statuses");

                    b.ToTable("proposal_statuses", (string)null);
                });

            modelBuilder.Entity("ProposalService.Domain.Entities.Proposal", b =>
                {
                    b.HasOne("ProposalService.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_proposals_client_client_id");

                    b.HasOne("ProposalService.Domain.Entities.InsuranceType", "InsuranceType")
                        .WithMany()
                        .HasForeignKey("IdInsuranceType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_proposals_insurance_types_id_insurance_type");

                    b.HasOne("ProposalService.Domain.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("IdPaymentMethod")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_proposals_payment_methods_id_payment_method");

                    b.HasOne("ProposalService.Domain.Entities.ProposalStatus", "Status")
                        .WithMany()
                        .HasForeignKey("IdStatus")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_proposals_proposal_statuses_id_status");

                    b.Navigation("Client");

                    b.Navigation("InsuranceType");

                    b.Navigation("PaymentMethod");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
